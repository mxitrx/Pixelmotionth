// --- CONFIG ---
const SHEET_ID = "1M4wCXVYhUaSDh1Kvj15H6N0h8aCOI1LQ_NHcxN6-5Jo";
const CALENDAR_ID = "357f52d58f932fad131d7a2881a17e238f71487eb315b08facb86437f6efd5e6@group.calendar.google.com";
const ADMIN_USERNAME = "mxitrx";
const ADMIN_PASSWORD = "!Zero0925360936";
const DRIVE_FOLDER_ID = "14agIUrtdoH_jNjX5Ftnh1ehcfUPdEo-Z"; // ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏•‡∏¥‡∏õ

const LOG_SHEET_NAME = "RentalLog";
const EQUIPMENT_SHEET_NAME = "EquipmentList";

const sheet = SpreadsheetApp.openById(SHEET_ID);
const logSheet = sheet.getSheetByName(LOG_SHEET_NAME);
const equipmentSheet = sheet.getSheetByName(EQUIPMENT_SHEET_NAME);
const calendar = CalendarApp.getCalendarById(CALENDAR_ID);

// ===============================================================
// GET
// ===============================================================
function doGet(e) {
  const action = e.parameter.action;
  try {
    if (action === "getEquipment") return handleGetEquipmentList();
    if (action === "getLogs") return handleGetLogs();
    if (action === "getEvents") return handleGetEvents();
    if (action === "getPromptPayQR") return handleGetPromptPayQR(e);
    if (action === "contact") return handleContactForm(e);


    return createJsonResponse({ error: "Invalid GET action" });
  } catch (err) {
    return createJsonResponse({ error: err.message });
  }
}

// ===============================================================
// POST
// ===============================================================
function doPost(e) {
  try {
    const params = e.parameter;
    const action = params.action;

    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô)
    if (action === "uploadSlip" || (e && e.files && e.files.file)) {
      return handlePaymentSlip(e);
    }

    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ uploadSlip ‡πÅ‡∏ö‡∏ö base64 (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô)
    if (e.postData && e.postData.contents && e.postData.type === "application/json") {
      const data = JSON.parse(e.postData.contents);
      if (data.action === "uploadSlip") return handleSlipUpload(data);
    }

    // ‚úÖ ‡πÄ‡∏ä‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ index.html
    if (action === "rent") return handleRental(params);

    // üß† ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•
    if (params.username !== ADMIN_USERNAME || params.password !== ADMIN_PASSWORD) {
      throw new Error("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
    }

    if (action === "addEquipment") return handleAddEquipment(params);
    if (action === "deleteEquipment") return handleDeleteEquipment(params);
    if (action === "deleteLog") return handleDeleteLog(params);
    if (action === "endRental") return handleEndRental(params);

    return createJsonResponse({ result: "error", message: "Invalid POST action" });
  } catch (err) {
    return createJsonResponse({ result: "error", message: err.message });
  }
}


// ===============================================================
// ‚úÖ handlePaymentSlip (‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ payment.html)
// ===============================================================
function handlePaymentSlip(e) {
  try {
    Logger.log("üì• handlePaymentSlip called");
    Logger.log(JSON.stringify(e));

    const folder = DriveApp.getFolderById(DRIVE_FOLDER_ID);

    // üîπ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á form-data ‡πÅ‡∏•‡∏∞ base64
    let blob;
    if (e?.files && e.files.file) {
      blob = e.files.file;
    } else if (e?.postData?.contents && e.postData.type === "application/octet-stream") {
      const data = Utilities.base64Decode(e.postData.contents);
      blob = Utilities.newBlob(data, "image/jpeg", "slip.jpg");
    } else {
      throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö (e.files.file ‡∏´‡∏£‡∏∑‡∏≠ e.postData.contents)");
    }

    const name = e.parameter.custName || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠";
    const equipment = e.parameter.equipment || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå";
    const amount = e.parameter.amount || "0";
    const renterEmail = e.parameter.email || "";

    const filename = `${new Date().toISOString().replace(/[:T]/g, "-").split(".")[0]}_${name}_${equipment}.jpg`;
    const file = folder.createFile(blob).setName(filename);
    const fileUrl = file.getUrl();

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Log ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï
    const lastRow = logSheet.getLastRow();
    const data = logSheet.getRange(2, 1, lastRow - 1, 11).getValues();
    let found = false;

    for (let i = data.length - 1; i >= 0; i--) {
      const [ts, renter, , , eq, , , status] = data[i];
      if (renter === name && eq === equipment && status === "‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô") {
        logSheet.getRange(i + 2, 11).setValue(fileUrl);
        logSheet.getRange(i + 2, 8).setValue("‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà");
        found = true;
        break;
      }
    }

    if (!found) Logger.log(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏Ç‡∏≠‡∏á ${name} (${equipment})`);

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö JSON
    return createJsonResponse({ success: true, message: "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", fileUrl });
  } catch (err) {
    Logger.log("‚ùå Error in handlePaymentSlip: " + err.message);
    return createJsonResponse({ success: false, message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + err.message });
  }
}




// ===============================================================
// ‚úÖ handleSlipUpload (base64 ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤)
// ===============================================================
function handleSlipUpload(data) {
  try {
    const { file, fileName, mimeType, custName, equipment, amount, email } = data;
    const folder = DriveApp.getFolderById(DRIVE_FOLDER_ID);

    const blob = Utilities.newBlob(Utilities.base64Decode(file), mimeType, fileName);
    const newFile = folder.createFile(blob);
    const fileUrl = newFile.getUrl();

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï
    const dataValues = logSheet.getRange(2, 1, logSheet.getLastRow() - 1, 11).getValues();
    for (let i = 0; i < dataValues.length; i++) {
      const [ts, renter, , , eq, , , status] = dataValues[i];
      if (renter === custName && eq === equipment && status === "‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô") {
        logSheet.getRange(i + 2, 11).setValue(fileUrl);
        logSheet.getRange(i + 2, 8).setValue("‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà");
        break;
      }
    }

    return createJsonResponse({ success: true, message: "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", fileUrl });
  } catch (err) {
    return createJsonResponse({ success: false, message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + err.message });
  }
}


// ===============================================================
// ‚úÖ handleRental (‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ index.html)
// ===============================================================
function handleRental(params) {
  const { renterName, address, phone, equipmentName, startDate, endDate } = params;
  const rentalTimestamp = new Date();

  const equipmentMap = getEquipmentMap();
  const pricePerDay = equipmentMap[equipmentName] ? parseFloat(equipmentMap[equipmentName].price) : 0;
  if (!pricePerDay) throw new Error(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: ${equipmentName}`);

  const start = new Date(startDate);
  const end = new Date(endDate);
  const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24));
  const totalCost = days * pricePerDay;

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Event ‡πÑ‡∏õ‡πÉ‡∏ô Google Calendar
  const eventTitle = `${equipmentName} (${renterName})`;
  const eventDescription = `‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${phone}\n‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${address}\n‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞: ${totalCost.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;
  const event = calendar.createEvent(eventTitle, start, end, { description: eventDescription });

  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheet
  logSheet.appendRow([
    rentalTimestamp, renterName, address, phone, equipmentName,
    start, end, "‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", event.getId(), totalCost.toFixed(2), ""
  ]);

  return createJsonResponse({ result: "success", message: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", rentalId: rentalTimestamp.getTime() });
}

// ===============================================================
// ‚úÖ Utility Functions
// ===============================================================
function createJsonResponse(data) {
  return ContentService.createTextOutput(JSON.stringify(data))
    .setMimeType(ContentService.MimeType.JSON);
}

function getEquipmentMap() {
  const rows = equipmentSheet.getDataRange().getValues();
  const map = {};
  for (let i = 1; i < rows.length; i++) {
    const [name, price, desc, imageUrl] = rows[i];
    map[name] = { price, desc, imageUrl };
  }
  return map;
}

// ===============================================================
// ‚úÖ handleGetEquipmentList (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏î‡πâ‡∏ß‡∏¢)
// ===============================================================
function handleGetEquipmentList() {
  const data = equipmentSheet.getDataRange().getValues().slice(1); // ‡∏Ç‡πâ‡∏≤‡∏° header ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å
  const formatted = data.map(row => ({
    name: row[0],           // A = EquipmentName
    price: row[1],          // B = RentalPrice
    quantity: row[2],       // C = Quantity
    desc: row[3] || "",     // D = Description
    imageUrl: row[4] || ""  // E = ImageUrl (‡πÉ‡∏´‡∏°‡πà)
  }));
  return createJsonResponse(formatted);
}


function handleGetLogs() {
  const data = logSheet.getDataRange().getValues().slice(1);
  return createJsonResponse(data);
}

function handleGetEvents() {
  const data = logSheet.getDataRange().getValues().slice(1);
  const events = data.filter(row => row[8] && row[5] && row[6]).map(row => ({
    id: row[8],
    title: `${row[4]} (${row[1]})`,
    start: new Date(row[5]).toISOString(),
    end: new Date(row[6]).toISOString(),
    body: `‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${row[3]}\n‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${row[2]}`
  }));
  return createJsonResponse(events);
}

// ===============================================================
// ‚úÖ Admin Management
// ===============================================================
function handleAddEquipment(params) {
  equipmentSheet.appendRow([params.name, params.price, params.desc, params.imageUrl]);
  return createJsonResponse({ result: "success", message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
}

function handleDeleteEquipment(params) {
  const name = params.name;
  const data = equipmentSheet.getDataRange().getValues();
  for (let i = 1; i < data.length; i++) {
    if (data[i][0] === name) {
      equipmentSheet.deleteRow(i + 1);
      return createJsonResponse({ result: "success", message: "‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏•‡πâ‡∏ß" });
    }
  }
  return createJsonResponse({ result: "error", message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ" });
}

function handleEndRental(params) {
  const id = params.eventId;
  const data = logSheet.getDataRange().getValues();
  for (let i = 1; i < data.length; i++) {
    if (data[i][8] === id) {
      logSheet.getRange(i + 1, 8).setValue("‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
      const ev = calendar.getEventById(id);
      if (ev) ev.deleteEvent();
      return createJsonResponse({ result: "success", message: "‡∏¢‡∏∏‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
    }
  }
  return createJsonResponse({ result: "error", message: "‡πÑ‡∏°‡πà‡∏û‡∏ö Event ID" });
}

function handleDeleteLog(params) {
  const id = params.eventId;
  const data = logSheet.getDataRange().getValues();
  for (let i = 1; i < data.length; i++) {
    if (data[i][8] === id) {
      logSheet.deleteRow(i + 1);
      return createJsonResponse({ result: "success", message: "‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß" });
    }
  }
  return createJsonResponse({ result: "error", message: "‡πÑ‡∏°‡πà‡∏û‡∏ö Log ID" });
}

function sendAdminEmail(name, equipment, amount, slipUrl) {
  const adminEmail = "your@email.com"; // üîπ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏à‡∏£‡∏¥‡∏á
  const subject = `‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å ${name}`;
  const body = `
‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà

‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤: ${name}
‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: ${equipment}
‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞: ${amount} ‡∏ö‡∏≤‡∏ó
‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏•‡∏¥‡∏õ: ${slipUrl}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô Google Sheet ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö Admin
  `;
  MailApp.sendEmail(adminEmail, subject, body);
}

// ===============================================================
// ‚úÖ Proxy ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PromptPay QR (‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)
// ===============================================================
function handleGetPromptPayQR(e) {
  const id = e.parameter.id || "";
  const amount = e.parameter.amount || "0.00";
  const url = `https://promptpay.io/${id}/${amount}.png`;

  try {
    const res = UrlFetchApp.fetch(url);
    const blob = res.getBlob();
    return ContentService
      .createTextOutput(
        "data:image/png;base64," + Utilities.base64Encode(blob.getBytes())
      )
      .setMimeType(ContentService.MimeType.TEXT);
  } catch (err) {
    return createJsonResponse({ error: "‡πÇ‡∏´‡∏•‡∏î QR ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + err.message });
  }
}

// ===============================================================
// ‚úÖ handleContactForm: ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ contact.html
// ===============================================================
function handleContactForm(e) {
  try {
    const { name, email, message } = e.parameter;
    const sheetName = "ContactMessages";
    let contactSheet = sheet.getSheetByName(sheetName);
    if (!contactSheet) contactSheet = sheet.insertSheet(sheetName);

    const timestamp = new Date();
    contactSheet.appendRow([timestamp, name, email, message]);

    // ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•
    const adminEmail = "oitthiritkhunsiri@gmail.com"; // üëâ ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ñ‡∏∏‡∏ì
    const subject = `üì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å ${name}`;
    const body = `
‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:

‡∏ä‡∏∑‡πà‡∏≠: ${name}
‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${email}

‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:
${message}

‡∏™‡πà‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${timestamp.toLocaleString("th-TH")}
    `;
    MailApp.sendEmail(adminEmail, subject, body);

    // ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    MailApp.sendEmail({
      to: email,
      subject: `üì¨ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå - ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß`,
      htmlBody: `
        ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${name},<br><br>
        ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤ ‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß<br>
        <b>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á:</b><br>
        ${message}<br><br>
        ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏±‡∏ö üôè<br><br>
        ‚Äî ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô Pixelmotionth
      `
    });

    return createJsonResponse({ result: "success", message: "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
  } catch (err) {
    return createJsonResponse({ result: "error", message: err.message });
  }
}

function updateStock(equipmentName, change) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = ss.getSheetByName("Equipment");
  const data = sheet.getDataRange().getValues();
  const nameCol = 1; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå A
  const stockCol = 3; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå C ‡∏Ñ‡∏∑‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á)

  for (let i = 1; i < data.length; i++) {
    if (data[i][nameCol - 1] === equipmentName) {
      let currentStock = Number(data[i][stockCol - 1]) || 0;
      sheet.getRange(i + 1, stockCol).setValue(currentStock + change);
      break;
    }
  }
}

// üü† ‡∏ï‡∏±‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πà‡∏≤
function rentEquipment(equipmentName, quantity) {
  updateStock(equipmentName, -Math.abs(quantity));
}

// üü¢ ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤
function returnEquipment(equipmentName, quantity) {
  updateStock(equipmentName, Math.abs(quantity));
}

function handleUpdateStatus(params) {
  try {
    const { name, equipment, status } = params;
    const data = logSheet.getDataRange().getValues();

    for (let i = 1; i < data.length; i++) {
      const [ts, renter, , , eq] = data[i];
      if (renter === name && eq === equipment) {
        logSheet.getRange(i + 1, 8).setValue(status); // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        if (status === "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å") sendCancelEmail(renter, eq);
        if (status === "‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß") sendConfirmEmail(renter, eq);
        return createJsonResponse({ result: "success", message: `‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô ${status} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à` });
      }
    }
    return createJsonResponse({ result: "error", message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤" });
  } catch (err) {
    return createJsonResponse({ result: "error", message: err.message });
  }
}

function sendConfirmEmail(name, equipment) {
  const adminEmail = "oitthiritkhunsiri@gmail.com";
  const subject = `‚úÖ ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô (${name})`;
  const body = `‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á ${name} (${equipment}) ‡πÄ‡∏õ‡πá‡∏ô "‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß"`;
  MailApp.sendEmail(adminEmail, subject, body);
}

function sendCancelEmail(name, equipment) {
  const adminEmail = "oitthiritkhunsiri@gmail.com";
  const subject = `‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å (${name})`;
  const body = `‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á ${name} (${equipment}) ‡πÄ‡∏õ‡πá‡∏ô "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"`;
  MailApp.sendEmail(adminEmail, subject, body);
}

if (action === "getFinance") {
  const sheet = ss.getSheetByName("Finance");
  const values = sheet.getDataRange().getValues();
  values.shift();
  return ContentService.createTextOutput(JSON.stringify(values)).setMimeType(ContentService.MimeType.JSON);
}

